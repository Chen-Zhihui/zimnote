Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-08-16T19:44:36+08:00

====== face ======
Created 星期四 16 八月 2018

目标：

基础程序 
	[ ] 开发环境
		[*] 要看到命令行的输出
	[ ] 数据字典，以下内容要标准化，用excel表格管理 
		[ ] 命令行参数
		[ ] 算法参数
		[ ] 界面显示值
	[ ] 接口参数规范 
		[ ] 算法，界面之间需要传递参数，一律传字符串，
		[ ] 界面端，需要利用一个属性编辑框架，为每组参数找到合适的界面，或建立数据手册，按变量名字找到适当类型的控件，总之这一块比较麻烦QtMvvc
		[ ] 暂时方案，用一个文本编辑器编辑json形式的参数，代替复杂的控件
	[*] 命令行程序框架 <2018-08-23
		[*] 日志文件，把日志文件输出到一个临时文件夹中
		[*] 在调试界面中增加命令行参数，写一下VS2017的使用手册
		[*] 在命令行输出参数，全部配置到软件内部的配置中去，要配置到一个单独的根下面去
		[*] 输出配置信息时，输出成json形式
		[*] 以Poco为基础开发库，以json文件做配置文件，~~以ceral做序列化~~，写程序框架 
			[*] 软件内建一个json的模板，封装在一个虚函数中
			[*] 增一个命令行参数，将参数模板输出到json文件中，在启动参数中要设置下当前工作路径
			[*] 日志也输出到当前工作路径中
		[*] 命令行参数标准化
			[*] -help, 输出默认配置参数
			[*] config
		[*] 配置文件用层叠式
			[*] 程序编码中用jsonpp写配置，序列化后交给Poco::XmlConfigure，优先级最低
			[*] 启动后在当前目录或默认目录找配置文件，优先级中等
			[*] 命令行中指定参数config=filepath, 优先级最高
		[*] 划分功能模块，整理cmake安装脚本
	[ ] 算法库框架
		[ ] 这个是不带GUI的
			[ ] 算法测试框架：用OpenCV实现如何算法 <2018-08-26
				[ ] 头像检测
				[ ] 画检测框
				[ ] 追踪，
				[ ] 关键点检测，
				[ ] 画关键点
				[ ] 头部位置估计
				[ ] 画方位框
				[ ] 所有结果都直接画在视频中，截图放在一个文件夹中
				[ ] 输出成json
			[ ] 命令行工具
		[ ] 以opencv为开发库，整理有关face的全部算法  
		[ ] 算法参数定义成结构体，json序列化
		[ ] 算法接口用expected
		[ ] 写成命令行工具，用opencv的读写接口
			[ ] 测试数据
			[ ] 把结果直接画到视频中或图片中，在没有GUI的情况下，进行结果展示
		[ ] 输出输出参考openface
			[ ] 支持视频，文件，序列，摄像头，目前支持这些内容是一个错误，这个优先级低
			[ ] 需要boost
			[ ] opencv中打开视频和打开摄像头的方法是什么
			[ ] 打开摄像头之后如何做简单的显示，利用opencv的显示？
	[ ] 视频处理程序
		[ ] 这个是带GUI的
			[ ] 将做为标注工具使用，将来要连服务器
			[ ] 算法在后台线程中运行，提示用户找到合适的图片，用户如否决，则继续找，或是认可，则停止找
			[ ] 用户选好头像好，显示一个标注页面，提示用户输入头像的名称
			[ ] 全部信息准备好后，提交到服务器中
			[ ] 要做为EBox的一个模块使用，用户从资源库中选出素材，在EBox上完成头像注标，然后提交
			[ ] 按这个需求说下去，也就是说要给一个文件路径，从视频中提取出头像出来
			[ ] 模块划分
				[ ] 识别模块做成一个独立的QML模块使用
				[ ] EBox中选文件，并有标注及提交界面，可以做成与Space并列的模块
		[ ] 有GUI显示效果，备选方案： 可选方案多了，也是一个痛苦的事情 
			[ ] Qt的播放器框架
				[ ] 把playface中的现有模块移出来，做成专门的开发库
			[ ] MTL框架
			[ ] livecv
				[ ] 实现了CV与QML的交互，但这样一个框架能做什么呢？
				[ ] 在写GUI程序时可以用上这个库，直接把CV的数据，显示到QML中
			[ ] 自写一个分析图片的工具
				[ ] 这是就有点大了，如果要做的话，也应该在mitk中完成
		[ ] 利用上面的命令行程序框架和算法库框架，写处理视频的程序
		[ ] 输出格式暂定为json

[[+detector]]
[[+tracker]]
[[+croper]]
[[+aligner]]
[[+swaper]]
[[+landmarker]]
[[+feature]]
[[+validator]]
[[+recognizer]]
[[+eigenface]]


[[+people]]
