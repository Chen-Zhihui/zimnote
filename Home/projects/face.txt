Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-08-16T19:44:36+08:00

====== face ======
Created 星期四 16 八月 2018

目标：

基础程序 
	[ ] 开发环境
		[*] 要看到命令行的输出
	[ ] 数据字典，以下内容要标准化，用excel表格管理 
		[ ] 命令行参数
		[ ] 算法参数
		[ ] 界面显示值
	[ ] 接口参数规范 
		[ ] 算法，界面之间需要传递参数，一律传字符串，
		[ ] 界面端，需要利用一个属性编辑框架，为每组参数找到合适的界面，或建立数据手册，按变量名字找到适当类型的控件，总之这一块比较麻烦QtMvvc
		[ ] 暂时方案，用一个文本编辑器编辑json形式的参数，代替复杂的控件
	[ ] 命令行程序框架 <2018-08-23
		[*] 日志文件，把日志文件输出到一个临时文件夹中
		[ ] 在调试界面中增加命令行参数，写一下VS2017的使用手册
		[ ] 在命令行输出参数，全部配置到软件内部的配置中去
		[ ] 以Poco为基础开发库，以json文件做配置文件，~~以ceral做序列化~~，写程序框架 
			[ ] 软件内建一个json的模板，封装在一个虚函数中
			[ ] 增一个命令行参数，将参数模板输出到json文件中，在启动参数中要设置下当前工作路径
			[ ] 日志也输出到当前工作路径中
		[*] 命令行参数标准化
			[*] -help, 输出默认配置参数
			[*] config
		[*] 配置文件用层叠式
			[*] 程序编码中用jsonpp写配置，序列化后交给Poco::XmlConfigure，优先级最低
			[*] 启动后在当前目录或默认目录找配置文件，优先级中等
			[*] 命令行中指定参数config=filepath, 优先级最高
	[ ] 算法库框架，以opencv为开发库，整理有关face的全部算法 
		[ ] 算法参数定义成结构体，ceral序列化
		[ ] 算法接口用expected
		[ ] 输出输出参考openface，支持视频，文件，序列，摄像头
	[ ] 视频处理程序 
		[ ] 利用上面的命令行程序框架和算法库框架，写处理视频的程序
		[ ] 输出格式暂定为json

[[+detector]]
[[+tracker]]
[[+croper]]
[[+aligner]]
[[+swaper]]
[[+landmarker]]
[[+feature]]
[[+validator]]
[[+recognizer]]
[[+eigenface]]


[[+people]]
