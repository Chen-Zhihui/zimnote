Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-08-16T18:25:00+08:00

====== MITK ======
Created 星期四 16 八月 2018

http://mitk.org/wiki/MITK
https://github.com/MITK/MITK

====== 标注 ======

视图内有一个标准尺寸，所有的测量都以这个尺寸计算

====== 编译 ======
CTK fix for python
BOOST_ROOT = E:\ws.local\boost_1_68_0_b1_rc2

====== Code ======
* [[+Workbench]]
* [[+QmitkAboutDialog]]

[ ] MITK代码分析
	[ ] 通过QmitkAboutDialog查找主界面
	[ ] 分析主界面的逻辑
	[ ] 没有看到在mitk中写python算法的例子

====== 3rd Party libs ======


* poco @vcpkg 
* dcmtk, @mitk 
* OpenIGTLink @mitk 
* tinyxml, 2.6.2, @vcpkg 
* gdcm, @vcpkg 
* GLUT @mitk 
* raptor2 @mitk 
* Eigen @vcpkg 
* ANN @mitk 
* cppunit, @vcpkg 
* pcre @vcpkg 
* zlib @vcpkg 
* hdf5 @vcpkg 
* BetData @mitk 
* swig @mitk 
* Python
* numpy
* OpenCV
* vigra @mitk 

hard deps
* ITK @mitk
* VTK @vcpkg 
* boost, @vcpkg 
* SimpleITK @mitk 
* ACVD @mitk 
* CTK, @mitk 
* rasqal @mitk 
* redland @mitk 
* dcmqi @mitk 
* MatchPoint @mitk 
* qwt @vcpkg 

* BlueBerryDocTools
* Breakpad
* CabelSwig 
* InsightToolkit
* MITK-Data
* PythonQt
* SOFA
* ann-cmake
* ann
* doxygen
* freeglut
* glew
* glew-cmake
* libqxt
* matlab-cli
* patch.exe
* python-cmake-buildsystem
* qRestAPI
* vtkVmtk

_ctk_set_python_extension_symbol_visibility
macro(ctkMacroBuildLibWrapper)

if(CTK_WRAP_PYTHONQT_LIGHT)
  ctkMacroBuildLibWrapper(
	TARGET ${PROJECT_NAME}
	SRCS ${KIT_SRCS}
	WRAPPER_LIBRARY_TYPE ${CTK_LIBRARY_MODE}
	)
endif()
没有那个输出，说明没有那个函数，导出符号已经设置好了
查下有导出符号的
  set(KIT_PYTHONQT_SRCS) # Clear variable
  **ctkMacroWrapPythonQt**(${MY_NAMESPACE} ${lib_name}
	KIT_PYTHONQT_SRCS "${MY_SRCS}" FALSE ${HAS_DECORATOR})
  if(HAS_DECORATOR)
	list(APPEND KIT_PYTHONQT_SRCS ${DECORATOR_HEADER})
	if (CTK_QT_VERSION VERSION_GREATER "4")
	  qt5_wrap_cpp(KIT_PYTHONQT_SRCS ${DECORATOR_HEADER} OPTIONS -f${DECORATOR_HEADER})
	else()
	  QT4_WRAP_CPP(KIT_PYTHONQT_SRCS ${DECORATOR_HEADER} OPTIONS -f${DECORATOR_HEADER})
	endif()
  endif()
  add_library(${lib_name}PythonQt ${MY_WRAPPER_LIBRARY_TYPE} ${KIT_PYTHONQT_SRCS})

*** ctkMacroBuildLibWrapper 这个，或是CTK_WRAP_PYTHONQT_LIGHT有问题，CTK的动态库都没生成，vtk都生成了
*** ctkMacroWrapPythonQt
*** _ctk_set_python_extension_symbol_visibility
*** _ctk_set_python_extension_symbol_visibility
