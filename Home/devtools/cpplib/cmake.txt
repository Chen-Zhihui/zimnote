Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-08-23T13:58:47+08:00

====== cmake ======
Created 星期四 23 八月 2018

===== add_library =====

target_compile_definitions
target_compile_features
target_compile_options
target_include_directoires
target_link_libraries
target_sources

===== export install =====

===== install =====

==== 头文件 ====
install(
	DIRECTORY include/Poco
	DESTINATION include
	COMPONENT Devel
	PATTERN ".svn" EXCLUDE
	)


==== 编译成果 ====
install(
	TARGETS "${target_name}" EXPORT "${target_name}Targets"
	LIBRARY DESTINATION lib${LIB_SUFFIX}
	ARCHIVE DESTINATION lib${LIB_SUFFIX}
	RUNTIME DESTINATION bin
	INCLUDES DESTINATION include
	)
PDB
	get_property(type TARGET ${target_name} PROPERTY TYPE)
	if ("${type}" STREQUAL "SHARED_LIBRARY" OR "${type}" STREQUAL "EXECUTABLE")
		install(
			FILES $<TARGET_PDB_FILE:${target_name}>
			DESTINATION bin
			COMPONENT Devel
			OPTIONAL
			)
	endif()


PocoJSONConfigVersion.cmake    
	include(CMakePackageConfigHelpers)
	write_basic_package_version_file(
	  "${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}${target_name}ConfigVersion.cmake"
	  VERSION ${PROJECT_VERSION}
	  COMPATIBILITY AnyNewerVersion
	)
	
PocoJSONConfig.cmake           
	configure_file("cmake/Poco${target_name}Config.cmake"
	  "${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}${target_name}Config.cmake"
	  @ONLY
	)
	
	install(
		FILES
			"${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}${target_name}Config.cmake"
			"${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}${target_name}ConfigVersion.cmake"
		DESTINATION "lib${LIB_SUFFIX}/cmake/${PROJECT_NAME}"
		COMPONENT Devel
		)

PocoJSONTargets.cmake
PocoJSONTargets-debug.cmake
PocoJSONTargets-release.cmake
	export(EXPORT "${target_name}Targets"
	  FILE "${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}${target_name}Targets.cmake"
	  NAMESPACE "${PROJECT_NAME}::"
	)
	install(
		EXPORT "${target_name}Targets"
		FILE "${PROJECT_NAME}${target_name}Targets.cmake"
		NAMESPACE "${PROJECT_NAME}::"
		DESTINATION "lib${LIB_SUFFIX}/cmake/${PROJECT_NAME}"
		)


==== reference ====

#===============================================================================
# Macros for Package generation
#
#  POCO_GENERATE_PACKAGE - Generates *Config.cmake
#    Usage: POCO_GENERATE_PACKAGE(target_name)
#      INPUT:
#           target_name             the name of the target. e.g. Foundation for PocoFoundation
#    Example: POCO_GENERATE_PACKAGE(Foundation)
macro(POCO_GENERATE_PACKAGE target_name)




set(ConfigPackageLocation "lib/cmake/${PROJECT_NAME}")





endmacro()


===== use 3rd =====
